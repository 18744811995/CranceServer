<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hegu.tsurutani.dao.MenuMapper">
    <resultMap id="menuMap" type="com.hegu.tsurutani.entity.Admin_Menu">
        <result property="mId" column="mId"/>
        <result property="pId" column="pId"/>
        <result property="mName" column="mName"/>
        <result property="murl" column="murl"/>
    </resultMap>
    <select id="findMenuMapByUId" resultType="java.util.Map">
        select mId as id,mName as text,murl as href,pId,hasChildren from admin_menu
        where mId in(
            SELECT `mId` FROM admin_role_menu WHERE rId IN(
                SELECT rId FROM admin_user_role WHERE uId=#{uId}
            )
        )
        <choose>
            <when test='id != null and id !="" and id!="0"'>
                and pId=#{id}
            </when>
            <otherwise>
                and pId='0'
            </otherwise>
        </choose>
    </select>
    <select id="findMenuPage" resultMap="menuMap">
        select * from admin_menu where 1=1
        <if test="mName!=null and mName!=''">
            and mName like CONCAT('%',#{mName},'%')
        </if>
    </select>
    <select id="findMenuAll" resultType="java.util.Map">
        select mId as id ,mName as title,murl,pid from admin_menu
    </select>
    <select id="findDtreeMenuAll" resultType="java.util.Map">
        select mId as id,mName as title,"0" as checkArr,pId as parentId from admin_menu
    </select>
    <insert id="addParentMenu">
        insert into admin_menu(mId,mName,murl,pId,hasChildren)VALUES (#{menu.mId},#{menu.mName},#{menu.murl},#{menu.pId},'1')
    </insert>
    <delete id="deleteParentByMId">
         DELETE FROM admin_menu  WHERE MID IN(
            SELECT MID AS asmId FROM (
                    SELECT MID FROM admin_menu WHERE pid=#{mId}
                    UNION ALL
                    SELECT MID FROM  admin_menu WHERE MID=#{mId}
                ) a
        )
    </delete>
    <delete id="deleteRoleMenu">
        delete from admin_role_menu
            WHERE MID IN(
                SELECT MID FROM admin_menu WHERE pid=#{mId}
                UNION ALL
                SELECT MID FROM  admin_menu WHERE MID=#{mId}
            )
    </delete>

    <update id="updateMenu">
        update admin_menu set mName=#{mName} where mId=#{mId}
    </update>
    <insert id="addChilderMenu">
        insert into admin_menu(mId,mName,murl,pId,hasChildren)VALUES (#{menu.mId},#{menu.mName},#{menu.murl},#{menu.pId},'0')
    </insert>
</mapper>